{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jenyagrehova/Desktop/React-App-master/src/components/App/App.jsx\";\nimport { Fragment, PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport Florist from '../Florist/Florist';\nimport { getFlorists, addFlorist } from '../../model/model';\nimport { downloadOrdersDataAction, addFloristAction } from '../../store/actions';\nimport './App.css';\n\nclass App extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isInputActive: false,\n      inputValue: ''\n    };\n\n    this.inputFlorist = () => {\n      this.setState({\n        isInputActive: true\n      });\n    };\n\n    this.onKeyDown = async event => {\n      if (event.key === 'Escape') {\n        this.setState({\n          isInputState: false,\n          inputValue: ''\n        });\n      }\n\n      if (event.key === 'Enter') {\n        const orderArrName = this.state.inputValue;\n        this.setState({\n          isInputState: false,\n          inputValue: ''\n        });\n        const orderArr = {\n          name: orderArrName,\n          orders: []\n        };\n        await addFlorist(orderArr);\n        this.props.addFloristDispatch(orderArr);\n      }\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        inputValue: event.target.value\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const florists = await getFlorists();\n    this.props.downloadOrdersDataDispatch(florists);\n  }\n\n  render() {\n    const {\n      inputValue,\n      isInputActive\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        id: \"main-header\",\n        children: \"Flower Shop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        id: \"main-container\",\n        children: [this.props.florists.map((orderArr, index) => /*#__PURE__*/_jsxDEV(Florist, {\n          orderArrId: index\n        }, `orderarr-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"orderarr\",\n          children: [isInputActive && /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"add-orderarr-input\",\n            placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0432\\u0430\\u043A\\u0430\\u043D\\u0441\\u0438\\u0438 \",\n            value: inputValue,\n            onChange: this.onInputChange,\n            onKeyDown: this.onKeyDown\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 39\n          }, this), !isInputActive && /*#__PURE__*/_jsxDEV(\"header\", {\n            className: \"orderarr-name\",\n            onClick: this.inputFlorist,\n            children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0444\\u043B\\u043E\\u0440\\u0438\\u0441\\u0442\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({\n  florists\n}) => ({\n  florists\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addFloristDispatch: orderArr => dispatch(addFloristAction(orderArr)),\n  downloadOrdersDataDispatch: florists => dispatch(downloadOrdersDataAction(florists))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/jenyagrehova/Desktop/React-App-master/src/components/App/App.jsx"],"names":["Fragment","PureComponent","connect","Florist","getFlorists","addFlorist","downloadOrdersDataAction","addFloristAction","App","state","isInputActive","inputValue","inputFlorist","setState","onKeyDown","event","key","isInputState","orderArrName","orderArr","name","orders","props","addFloristDispatch","onInputChange","target","value","componentDidMount","florists","downloadOrdersDataDispatch","render","map","index","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { Fragment, PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport Florist from '../Florist/Florist';\n\nimport { getFlorists, addFlorist } from '../../model/model';\n\nimport { downloadOrdersDataAction, addFloristAction } from '../../store/actions';\nimport './App.css';\n\nclass App extends PureComponent {\n\n    state = {\n        isInputActive: false,\n        inputValue: ''\n    };\n\n    async componentDidMount() {\n        const florists = await getFlorists();\n        this.props.downloadOrdersDataDispatch(florists);\n    }\n\n    inputFlorist = () => {\n        this.setState({\n            isInputActive: true\n        });\n    }\n\n    onKeyDown = async (event) => {\n        if (event.key === 'Escape') {\n          this.setState({\n            isInputState: false,\n            inputValue: ''\n          });\n        }\n    \n        if (event.key === 'Enter') {\n            const orderArrName = this.state.inputValue;\n\n            this.setState({\n                isInputState: false,\n                inputValue: ''\n            })\n            const orderArr = { name: orderArrName, orders: [] };\n            await addFlorist(orderArr);\n            this.props.addFloristDispatch(orderArr);\n        }\n    }\n    \n    onInputChange = (event) => {\n        this.setState({\n            inputValue: event.target.value\n        });\n    }\n\n    render() {\n        const { inputValue, isInputActive } = this.state;\n\n        return (\n            <Fragment>\n                <header id=\"main-header\">\n                    Flower Shop\n                </header>\n                <main id=\"main-container\">\n                    {this.props.florists.map((orderArr, index) => (\n                        <Florist key={`orderarr-${index}`} orderArrId={index}/>\n                    ))}\n                    <div className=\"orderarr\">\n                    {isInputActive && <input\n                        type=\"text\"\n                        id=\"add-orderarr-input\"\n                        placeholder=\"Название вакансии \"\n                        value={inputValue}\n                        onChange={this.onInputChange}\n                        onKeyDown={this.onKeyDown}\n                    />}\n                    {!isInputActive && <header className=\"orderarr-name\" onClick={this.inputFlorist}>\n                        Добавить флориста\n                    </header>}\n                    </div>\n                </main>\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = ({ florists }) => ({ florists });\n\nconst mapDispatchToProps = dispatch => ({\n    addFloristDispatch: (orderArr) => dispatch(addFloristAction(orderArr)),\n    downloadOrdersDataDispatch: (florists) => dispatch(downloadOrdersDataAction(florists)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(App);\n"]},"metadata":{},"sourceType":"module"}