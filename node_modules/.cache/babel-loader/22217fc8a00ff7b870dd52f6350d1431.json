{"ast":null,"code":"const hostname = 'http://localhost:9999';\n\nconst getFlorists = async () => {\n  const response = await fetch(hostname + '/orderarr', {\n    method: 'GET'\n  });\n\n  if (response.status !== 200) {\n    throw new Error(`getFlorists returned ${response.status}`);\n  }\n\n  const jsonData = await response.json();\n  return jsonData;\n};\n\nconst addFlorist = async orderArr => {\n  const response = await fetch(hostname + '/orderarr', {\n    method: 'POST',\n    body: JSON.stringify(orderArr),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n\n  if (response.status !== 200) {\n    throw new Error(`addFlorist returned ${response.status}`);\n  }\n\n  const {\n    info\n  } = await response.json();\n  console.log(info);\n};\n\nconst addOrder = async ({\n  order,\n  orderArrId\n}) => {\n  const response = await fetch(hostname + `/orderarr/${orderArrId}/order`, {\n    method: 'POST',\n    body: JSON.stringify(order),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  console.log(response);\n\n  if (response.status !== 200) {\n    throw new Error(`addOrder returned ${response.status}`);\n  }\n\n  const {\n    info\n  } = await response.json();\n  console.log(info);\n};\n\nconst editOrder = async ({\n  orderId,\n  orderArrId,\n  newName,\n  newAuthor\n}) => {\n  const response = await fetch(hostname + `/orderarr/${orderArrId}/order/${orderId}`, {\n    method: 'PATCH',\n    body: JSON.stringify({\n      newName: newName,\n      newAuthor: newAuthor\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n\n  if (response.status !== 200) {\n    throw new Error(`editOrderName returned ${response.status}`);\n  }\n\n  const {\n    info\n  } = await response.json();\n  console.log(info);\n};\n\nconst removeOrder = async ({\n  orderId,\n  orderArrId\n}) => {\n  const response = await fetch(hostname + `/orderarr/${orderArrId}/order/${orderId}`, {\n    method: 'DELETE'\n  });\n\n  if (response.status !== 200) {\n    throw new Error(`removeOrder returned ${response.status}`);\n  }\n\n  const {\n    info\n  } = await response.json();\n  console.log(info);\n};\n\nconst moveOrder = async ({\n  orderId,\n  orderArrId,\n  destShelfId\n}) => {\n  const response = await fetch(hostname + `/orderarr/${orderArrId}`, {\n    method: 'PATCH',\n    body: JSON.stringify({\n      orderId: orderId,\n      destShelfId: destShelfId\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n\n  if (response.status !== 200) {\n    throw new Error(`removeOrder returned ${response.status}`);\n  }\n\n  const {\n    info\n  } = await response.json();\n  console.log(info);\n};\n\nexport { getFlorists, addFlorist, addOrder, editOrder, removeOrder, moveOrder };","map":{"version":3,"sources":["/Users/jenyagrehova/Desktop/Recruiting/src/model/model.js"],"names":["hostname","getFlorists","response","fetch","method","status","Error","jsonData","json","addFlorist","orderArr","body","JSON","stringify","headers","info","console","log","addOrder","order","orderArrId","editOrder","orderId","newName","newAuthor","removeOrder","moveOrder","destShelfId"],"mappings":"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","sourcesContent":["const hostname = 'http://localhost:9999';\n\nconst getFlorists = async () => {\n    const response = await fetch(hostname + '/orderarr', {method: 'GET'});\n    if (response.status !== 200) {\n        throw new Error(`getFlorists returned ${response.status}`);\n    }\n    const jsonData = await response.json();\n    return jsonData;\n};\n\nconst addFlorist = async (orderArr) => {\n    const response = await fetch(hostname + '/orderarr', {\n        method: 'POST', \n        body: JSON.stringify(orderArr),\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    });\n\n    if (response.status !== 200) {\n        throw new Error(`addFlorist returned ${response.status}`);\n    }\n    const { info } = await response.json();\n    console.log(info);\n};\n\nconst addOrder = async ({ order, orderArrId }) => {\n    const response = await fetch(hostname + `/orderarr/${orderArrId}/order`, {\n        method: 'POST', \n        body: JSON.stringify(order),\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    });\n\n    console.log(response);\n\n    if (response.status !== 200) {\n        throw new Error(`addOrder returned ${response.status}`);\n    }\n    const { info } = await response.json();\n    console.log(info);\n};\n\nconst editOrder = async ({ orderId, orderArrId, newName, newAuthor }) => {\n    const response = await fetch(hostname + `/orderarr/${orderArrId}/order/${orderId}`, {\n        method: 'PATCH', \n        body: JSON.stringify({ newName: newName, newAuthor: newAuthor }), \n        headers: {\n            'Content-Type': 'application/json'\n        }\n    });\n\n    if (response.status !== 200) {\n        throw new Error(`editOrderName returned ${response.status}`);\n    }\n    const { info } = await response.json();\n    console.log(info);\n};\n\nconst removeOrder = async ({ orderId, orderArrId }) => {\n    const response = await fetch(hostname + `/orderarr/${orderArrId}/order/${orderId}`, {\n        method: 'DELETE'\n    });\n\n    if (response.status !== 200) {\n        throw new Error(`removeOrder returned ${response.status}`);\n    }\n    const { info } = await response.json();\n    console.log(info);\n};\n\nconst moveOrder = async ({ orderId, orderArrId, destShelfId }) => {\n    const response = await fetch(hostname + `/orderarr/${orderArrId}`, {\n        method: 'PATCH',\n        body: JSON.stringify({ orderId: orderId, destShelfId: destShelfId }),\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    });\n\n    if (response.status !== 200) {\n        throw new Error(`removeOrder returned ${response.status}`);\n    }\n    const { info } = await response.json();\n    console.log(info);\n};\n\nexport {\n    getFlorists,\n    addFlorist,\n    addOrder,\n    editOrder,\n    removeOrder,\n    moveOrder,\n};\n"]},"metadata":{},"sourceType":"module"}