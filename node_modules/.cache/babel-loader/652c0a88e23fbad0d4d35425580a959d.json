{"ast":null,"code":"import _regeneratorRuntime from\"/Users/jenyagrehova/Desktop/React-App-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/jenyagrehova/Desktop/React-App-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";var hostname='http://localhost:9999';var getFlorists=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,jsonData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(hostname+'/orderarr',{method:'GET'});case 2:response=_context.sent;if(!(response.status!==200)){_context.next=5;break;}throw new Error(\"getFlorists returned \".concat(response.status));case 5:_context.next=7;return response.json();case 7:jsonData=_context.sent;return _context.abrupt(\"return\",jsonData);case 9:case\"end\":return _context.stop();}}},_callee);}));return function getFlorists(){return _ref.apply(this,arguments);};}();var addFlorist=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(orderArr){var response,_yield$response$json,info;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(hostname+'/orderarr',{method:'POST',body:JSON.stringify(orderArr),headers:{'Content-Type':'application/json'}});case 2:response=_context2.sent;if(!(response.status!==200)){_context2.next=5;break;}throw new Error(\"addFlorist returned \".concat(response.status));case 5:_context2.next=7;return response.json();case 7:_yield$response$json=_context2.sent;info=_yield$response$json.info;console.log(info);case 10:case\"end\":return _context2.stop();}}},_callee2);}));return function addFlorist(_x){return _ref2.apply(this,arguments);};}();var addOrder=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref3){var order,orderArrId,response,_yield$response$json2,info;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:order=_ref3.order,orderArrId=_ref3.orderArrId;_context3.next=3;return fetch(hostname+\"/orderarr/\".concat(orderArrId,\"/order\"),{method:'POST',body:JSON.stringify(order),headers:{'Content-Type':'application/json'}});case 3:response=_context3.sent;console.log(response);if(!(response.status!==200)){_context3.next=7;break;}throw new Error(\"addOrder returned \".concat(response.status));case 7:_context3.next=9;return response.json();case 9:_yield$response$json2=_context3.sent;info=_yield$response$json2.info;console.log(info);case 12:case\"end\":return _context3.stop();}}},_callee3);}));return function addOrder(_x2){return _ref4.apply(this,arguments);};}();var editOrder=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(_ref5){var orderId,orderArrId,newName,newAuthor,response,_yield$response$json3,info;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:orderId=_ref5.orderId,orderArrId=_ref5.orderArrId,newName=_ref5.newName,newAuthor=_ref5.newAuthor;_context4.next=3;return fetch(hostname+\"/orderarr/\".concat(orderArrId,\"/order/\").concat(orderId),{method:'PATCH',body:JSON.stringify({newName:newName,newAuthor:newAuthor}),headers:{'Content-Type':'application/json'}});case 3:response=_context4.sent;if(!(response.status!==200)){_context4.next=6;break;}throw new Error(\"editOrderName returned \".concat(response.status));case 6:_context4.next=8;return response.json();case 8:_yield$response$json3=_context4.sent;info=_yield$response$json3.info;console.log(info);case 11:case\"end\":return _context4.stop();}}},_callee4);}));return function editOrder(_x3){return _ref6.apply(this,arguments);};}();var removeOrder=/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(_ref7){var orderId,orderArrId,response,_yield$response$json4,info;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:orderId=_ref7.orderId,orderArrId=_ref7.orderArrId;_context5.next=3;return fetch(hostname+\"/orderarr/\".concat(orderArrId,\"/order/\").concat(orderId),{method:'DELETE'});case 3:response=_context5.sent;if(!(response.status!==200)){_context5.next=6;break;}throw new Error(\"removeOrder returned \".concat(response.status));case 6:_context5.next=8;return response.json();case 8:_yield$response$json4=_context5.sent;info=_yield$response$json4.info;console.log(info);case 11:case\"end\":return _context5.stop();}}},_callee5);}));return function removeOrder(_x4){return _ref8.apply(this,arguments);};}();var moveOrder=/*#__PURE__*/function(){var _ref10=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(_ref9){var orderId,orderArrId,destShelfId,response,_yield$response$json5,info;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:orderId=_ref9.orderId,orderArrId=_ref9.orderArrId,destShelfId=_ref9.destShelfId;_context6.next=3;return fetch(hostname+\"/orderarr/\".concat(orderArrId),{method:'PATCH',body:JSON.stringify({orderId:orderId,destShelfId:destShelfId}),headers:{'Content-Type':'application/json'}});case 3:response=_context6.sent;if(!(response.status!==200)){_context6.next=6;break;}throw new Error(\"removeOrder returned \".concat(response.status));case 6:_context6.next=8;return response.json();case 8:_yield$response$json5=_context6.sent;info=_yield$response$json5.info;console.log(info);case 11:case\"end\":return _context6.stop();}}},_callee6);}));return function moveOrder(_x5){return _ref10.apply(this,arguments);};}();export{getFlorists,addFlorist,addOrder,editOrder,removeOrder,moveOrder};","map":{"version":3,"sources":["/Users/jenyagrehova/Desktop/React-App-master/src/model/model.js"],"names":["hostname","getFlorists","fetch","method","response","status","Error","json","jsonData","addFlorist","orderArr","body","JSON","stringify","headers","info","console","log","addOrder","order","orderArrId","editOrder","orderId","newName","newAuthor","removeOrder","moveOrder","destShelfId"],"mappings":"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","sourcesContent":["const hostname = 'http://localhost:9999';\n\nconst getFlorists = async () => {\n    const response = await fetch(hostname + '/orderarr', {method: 'GET'});\n    if (response.status !== 200) {\n        throw new Error(`getFlorists returned ${response.status}`);\n    }\n    const jsonData = await response.json();\n    return jsonData;\n};\n\nconst addFlorist = async (orderArr) => {\n    const response = await fetch(hostname + '/orderarr', {\n        method: 'POST', \n        body: JSON.stringify(orderArr),\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    });\n\n    if (response.status !== 200) {\n        throw new Error(`addFlorist returned ${response.status}`);\n    }\n    const { info } = await response.json();\n    console.log(info);\n};\n\nconst addOrder = async ({ order, orderArrId }) => {\n    const response = await fetch(hostname + `/orderarr/${orderArrId}/order`, {\n        method: 'POST', \n        body: JSON.stringify(order),\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    });\n\n    console.log(response);\n\n    if (response.status !== 200) {\n        throw new Error(`addOrder returned ${response.status}`);\n    }\n    const { info } = await response.json();\n    console.log(info);\n};\n\nconst editOrder = async ({ orderId, orderArrId, newName, newAuthor }) => {\n    const response = await fetch(hostname + `/orderarr/${orderArrId}/order/${orderId}`, {\n        method: 'PATCH', \n        body: JSON.stringify({ newName: newName, newAuthor: newAuthor }), \n        headers: {\n            'Content-Type': 'application/json'\n        }\n    });\n\n    if (response.status !== 200) {\n        throw new Error(`editOrderName returned ${response.status}`);\n    }\n    const { info } = await response.json();\n    console.log(info);\n};\n\nconst removeOrder = async ({ orderId, orderArrId }) => {\n    const response = await fetch(hostname + `/orderarr/${orderArrId}/order/${orderId}`, {\n        method: 'DELETE'\n    });\n\n    if (response.status !== 200) {\n        throw new Error(`removeOrder returned ${response.status}`);\n    }\n    const { info } = await response.json();\n    console.log(info);\n};\n\nconst moveOrder = async ({ orderId, orderArrId, destShelfId }) => {\n    const response = await fetch(hostname + `/orderarr/${orderArrId}`, {\n        method: 'PATCH',\n        body: JSON.stringify({ orderId: orderId, destShelfId: destShelfId }),\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    });\n\n    if (response.status !== 200) {\n        throw new Error(`removeOrder returned ${response.status}`);\n    }\n    const { info } = await response.json();\n    console.log(info);\n};\n\nexport {\n    getFlorists,\n    addFlorist,\n    addOrder,\n    editOrder,\n    removeOrder,\n    moveOrder,\n};\n"]},"metadata":{},"sourceType":"module"}