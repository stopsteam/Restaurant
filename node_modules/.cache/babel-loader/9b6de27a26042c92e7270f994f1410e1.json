{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jenyagrehova/Desktop/React-App-master/src/components/Florist/Florist.jsx\";\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport './Florist.css';\nimport { addOrder } from '../../model/model';\nimport Order from '../Order/Order';\nimport { addOrderAction } from '../../store/actions';\n\nclass Florist extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    this.onOrderAdd = async () => {\n      let orderName = prompt('имя кандидата', '');\n\n      if (!orderName || !orderName.trim()) {\n        alert('Попробуйте еще раз!');\n        return;\n      }\n\n      orderName = orderName.trim();\n      let orderAuthor = prompt('возраст', '').trim();\n\n      if (!orderAuthor || !orderAuthor.trim()) {\n        alert('Попробуйте еще раз!');\n        return;\n      }\n\n      orderAuthor = orderAuthor.trim();\n      const newOrderData = {\n        order: {\n          name: orderName,\n          author: orderAuthor\n        },\n        orderArrId: this.props.orderArrId\n      };\n      await addOrder(newOrderData);\n      this.props.addOrderDispatch(newOrderData);\n    };\n  }\n\n  render() {\n    const orderArrId = this.props.orderArrId;\n    const orderArr = this.props.florists[orderArrId];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"orderarr\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"orderarr-name\",\n        children: orderArr.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"orderarr-orders\",\n        children: orderArr.orders.map((order, index) => /*#__PURE__*/_jsxDEV(Order, {\n          orderId: index,\n          orderArrId: orderArrId\n        }, `order-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"orderarr-add-task\",\n        onClick: this.onOrderAdd,\n        children: \"\\u041D\\u041E\\u0412\\u042B\\u0419 \\u041A\\u0410\\u041D\\u0414\\u0418\\u0414\\u0410\\u0422\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({\n  florists\n}) => ({\n  florists\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addOrderDispatch: ({\n    order,\n    orderArrId\n  }) => dispatch(addOrderAction({\n    order,\n    orderArrId\n  }))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Florist);","map":{"version":3,"sources":["/Users/jenyagrehova/Desktop/React-App-master/src/components/Florist/Florist.jsx"],"names":["PureComponent","connect","addOrder","Order","addOrderAction","Florist","onOrderAdd","orderName","prompt","trim","alert","orderAuthor","newOrderData","order","name","author","orderArrId","props","addOrderDispatch","render","orderArr","florists","orders","map","index","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;AAAA,SAASA,aAAT,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,eAAP;AAEA,SAASC,QAAT,QAAyB,mBAAzB;AAEA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,cAAT,QAA+B,qBAA/B;;AAGA,MAAMC,OAAN,SAAsBL,aAAtB,CAAoC;AAAA;AAAA;;AAAA,SAEhCM,UAFgC,GAEnB,YAAY;AACrB,UAAIC,SAAS,GAAGC,MAAM,CAAC,eAAD,EAAkB,EAAlB,CAAtB;;AACA,UAAI,CAACD,SAAD,IAAc,CAACA,SAAS,CAACE,IAAV,EAAnB,EAAqC;AACjCC,QAAAA,KAAK,CAAC,qBAAD,CAAL;AACA;AACH;;AACDH,MAAAA,SAAS,GAAGA,SAAS,CAACE,IAAV,EAAZ;AAEA,UAAIE,WAAW,GAAGH,MAAM,CAAC,SAAD,EAAY,EAAZ,CAAN,CAAsBC,IAAtB,EAAlB;;AACA,UAAI,CAACE,WAAD,IAAgB,CAACA,WAAW,CAACF,IAAZ,EAArB,EAAyC;AACrCC,QAAAA,KAAK,CAAC,qBAAD,CAAL;AACA;AACH;;AAEDC,MAAAA,WAAW,GAAGA,WAAW,CAACF,IAAZ,EAAd;AACA,YAAMG,YAAY,GAAG;AACjBC,QAAAA,KAAK,EAAE;AACHC,UAAAA,IAAI,EAAEP,SADH;AAEHQ,UAAAA,MAAM,EAAEJ;AAFL,SADU;AAKjBK,QAAAA,UAAU,EAAE,KAAKC,KAAL,CAAWD;AALN,OAArB;AAQA,YAAMd,QAAQ,CAACU,YAAD,CAAd;AACA,WAAKK,KAAL,CAAWC,gBAAX,CAA4BN,YAA5B;AACH,KA3B+B;AAAA;;AA6BhCO,EAAAA,MAAM,GAAG;AACL,UAAMH,UAAU,GAAG,KAAKC,KAAL,CAAWD,UAA9B;AACA,UAAMI,QAAQ,GAAG,KAAKH,KAAL,CAAWI,QAAX,CAAoBL,UAApB,CAAjB;AAEA,wBACA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAC,eAAlB;AAAA,kBACMI,QAAQ,CAACN;AADf;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,kBACKM,QAAQ,CAACE,MAAT,CAAgBC,GAAhB,CAAoB,CAACV,KAAD,EAAQW,KAAR,kBACjB,QAAC,KAAD;AAA8B,UAAA,OAAO,EAAEA,KAAvC;AAA8C,UAAA,UAAU,EAAER;AAA1D,WAAa,SAAQQ,KAAM,EAA3B;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cAJJ,eASI;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAsC,QAAA,OAAO,EAAE,KAAKlB,UAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAeH;;AAhD+B;;AAmDpC,MAAMmB,eAAe,GAAG,CAAC;AAAEJ,EAAAA;AAAF,CAAD,MAAmB;AAAEA,EAAAA;AAAF,CAAnB,CAAxB;;AAEA,MAAMK,kBAAkB,GAAGC,QAAQ,KAAK;AACpCT,EAAAA,gBAAgB,EAAE,CAAC;AAAEL,IAAAA,KAAF;AAASG,IAAAA;AAAT,GAAD,KAA2BW,QAAQ,CAACvB,cAAc,CAAC;AAAES,IAAAA,KAAF;AAASG,IAAAA;AAAT,GAAD,CAAf;AADjB,CAAL,CAAnC;;AAIA,eAAef,OAAO,CAClBwB,eADkB,EAElBC,kBAFkB,CAAP,CAGbrB,OAHa,CAAf","sourcesContent":["import { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport './Florist.css';\n\nimport { addOrder } from '../../model/model';\n\nimport Order from '../Order/Order';\nimport { addOrderAction } from '../../store/actions';\n\n\nclass Florist extends PureComponent {\n\n    onOrderAdd = async () => {\n        let orderName = prompt('имя кандидата', '');\n        if (!orderName || !orderName.trim()) {\n            alert('Попробуйте еще раз!');\n            return;\n        }\n        orderName = orderName.trim();\n\n        let orderAuthor = prompt('возраст', '').trim();\n        if (!orderAuthor || !orderAuthor.trim()) {\n            alert('Попробуйте еще раз!');\n            return;\n        }\n\n        orderAuthor = orderAuthor.trim();\n        const newOrderData = {\n            order: {\n                name: orderName,\n                author: orderAuthor\n            },\n            orderArrId: this.props.orderArrId\n        };\n\n        await addOrder(newOrderData);\n        this.props.addOrderDispatch(newOrderData);\n    }\n\n    render() {\n        const orderArrId = this.props.orderArrId;\n        const orderArr = this.props.florists[orderArrId];\n\n        return (\n        <div className=\"orderarr\">\n            <header className=\"orderarr-name\">\n                { orderArr.name }\n            </header>\n            <div className=\"orderarr-orders\">\n                {orderArr.orders.map((order, index) => (\n                    <Order key={`order-${index}`} orderId={index} orderArrId={orderArrId} />\n                ))}\n            </div>\n            <footer className=\"orderarr-add-task\" onClick={this.onOrderAdd}>\n                НОВЫЙ КАНДИДАТ\n            </footer>\n        </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({ florists }) => ({ florists });\n\nconst mapDispatchToProps = dispatch => ({\n    addOrderDispatch: ({ order, orderArrId }) => dispatch(addOrderAction({ order, orderArrId })),\n});\n  \nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Florist);\n"]},"metadata":{},"sourceType":"module"}